name: node-ci

on:
  workflow_dispatch:
  push:
    branches:
      - opengl-2
    tags:
      - "node-*"
    paths:
      - CMakeLists.txt
      - "platform/linux/**"
      - "platform/default/**"
      - "platform/node/**"
      - "platform/windows/**"
      - "platform/darwin/**"
      - "platform/macos/**"
      - "platform/ios/platform/darwin/**"
      - "platform/ios/platform/macos/**"
      - ".github/workflows/node-ci.yml"
      - "bin/**"
      - "expression-test/**"
      - "include/**"
      - "metrics/**"
      - "render-test/**"
      - "scripts/**"
      - "src/**"
      - "test/**"
      - "vendor/**"
      - ".gitmodules"
      - "!**/*.md"

  pull_request:
    branches:
      - opengl-2
    paths:
      - CMakeLists.txt
      - "platform/linux/**"
      - "platform/default/**"
      - "platform/node/**"
      - "platform/windows/**"
      - "platform/darwin/**"
      - "platform/macos/**"
      - "platform/ios/platform/darwin/**"
      - "platform/ios/platform/macos/**"
      - ".github/workflows/node-ci.yml"
      - "bin/**"
      - "expression-test/**"
      - "include/**"
      - "metrics/**"
      - "render-test/**"
      - "scripts/**"
      - "src/**"
      - "test/**"
      - "vendor/**"
      - ".gitmodules"
      - "!**/*.md"

concurrency:
  # cancel jobs on PRs only
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}

jobs:
  test:
    runs-on: macos-latest
    env:
      BUILDTYPE: "Release"

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Downgrade cmake version
        run: |
          brew uninstall cmake
          mkdir ~/Downloads/CMake
          curl --silent --location --retry 3 "https://github.com/Kitware/CMake/releases/download/v3.28.1/cmake-3.28.1-macos-universal.dmg" --output ~/Downloads/CMake/cmake-Darwin-x86_64.dmg
          yes | PAGER=cat hdiutil attach -quiet -mountpoint /Volumes/cmake-Darwin-x86_64 ~/Downloads/CMake/cmake-Darwin-x86_64.dmg
          cp -R /Volumes/cmake-Darwin-x86_64/CMake.app /Applications/
          hdiutil detach /Volumes/cmake-Darwin-x86_64
          sudo "/Applications/CMake.app/Contents/bin/cmake-gui" --install=/usr/local/bin

      - name: cmake version
        run: |
          cmake --version

      - name: Setup submodules
        shell: bash
        run: |
          auth_header="$(git config --local --get http.https://github.com/.extraheader)"
          git submodule sync --recursive
          git -c core.longpaths=true -c "http.extraheader=$auth_header" -c protocol.version=2 submodule update --init --force --recursive || true

      - name: Get OS Architecture
        if: runner.os == 'MacOS' || runner.os == 'Linux'
        run: uname -m

      - name: Install dependencies (MacOS)
        if: runner.os == 'MacOS'
        env:
          HOMEBREW_NO_AUTO_UPDATE: 1
          HOMEBREW_NO_INSTALL_CLEANUP: 1
        run: |
          brew list ccache || brew install ccache
          brew list ninja || brew install ninja
          brew list pkg-config || brew install pkg-config
          brew list glfw || brew install glfw
          brew list libuv || brew install libuv

      - name: Use Node.js from nvmrc
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'

      - name: npm ci
        run: npm ci --ignore-scripts

      - name: Configure maplibre-native (MacOS)
        if: runner.os == 'MacOS'
        run: |
          cmake . -B build \
            -G Ninja \
            -DCMAKE_BUILD_TYPE=${{ env.BUILDTYPE }} \
            -DCMAKE_CXX_COMPILER_LAUNCHER=ccache \
            -DMLN_WITH_NODE=ON

      - name: Build maplibre-native (MacOS/Linux)
        if: runner.os == 'MacOS' || runner.os == 'Linux'
        run: |
          cmake --build build -j $(nproc 2>/dev/null || sysctl -n hw.ncpu 2>/dev/null)

      - name: Run render tests on macOS
        if: runner.os == 'macOS'
        run: set -o pipefail && ./build/mbgl-render-test-runner --manifestPath metrics/macos-xcode11-release-style.json

      - name: Upload render test artifacts (MacOS)
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: render-query-test-results_${{ runner.os }}_${{ matrix.arch }}
          path: metrics/macos-xcode11-release-style.html

      - name: Test (MacOS)
        if: runner.os == 'MacOS'
        run: npm test

      # On PRs make sure that the npm package can be packaged.
      - name: Pack
        run: |
          npm pack --dry-run
